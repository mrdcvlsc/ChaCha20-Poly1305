CC := g++
INSTALL_PREFIX=/usr/local/

CPPFLAGS := -g -Og -I./build/include -L./build/lib -lchacha20 -DMAKE_LIB
CXXFLAGS := -std=c++11 -Wall -Wextra

OS := $(shell uname)

ifeq ($(OS), Linux)
CPPFLAGS += -fsanitize=address
endif

SRC := tests
SRC_FILES := $(wildcard $(SRC)/*.cpp)
OBJ := $(patsubst $(SRC)/%.cpp,$(SRC)/%.out,$(SRC_FILES))

default:
ifeq ($(OS), Linux)
	@echo "creating build directory"
	@mkdir build
	@mkdir build/include
	@mkdir build/lib
	@echo "creating static lib"
	@echo "compiling uint512..."
	@$(CC) -c uint512.cpp -O2 -DMAKE_LIB -D_HIDE_WARNING
	@echo "compiling ChaCha20..."
	@$(CC) -c ChaCha20.cpp -O2 -DMAKE_LIB
	@echo "compiling libchacha20.a..."
	@ar -r libchacha20.a uint512.o ChaCha20.o
	@echo "build done : output -> libchacha20.a"
	@echo "moving files to build folder"
	@mv $(dir $(abspath $(lastword $(MAKEFILE_LIST))))libchacha20.a ./build/lib/
	@cp $(dir $(abspath $(lastword $(MAKEFILE_LIST))))ChaCha20-Poly1305.hpp ./build/include/
else
	@echo "creating build directory"
	@mkdir build
	@mkdir "build/include"
	@mkdir "build/lib"
	@echo "creating static lib"
	@echo "compiling uint512..."
	@$(CC) -c uint512.cpp -O2 -DMAKE_LIB -D_HIDE_WARNING
	@echo "compiling ChaCha20..."
	@$(CC) -c ChaCha20.cpp -O2 -DMAKE_LIB
	@echo "compiling libchacha20.a..."
	@ar -r libchacha20.a uint512.o ChaCha20.o
	@echo "build done : output -> libchacha20.a"
	@echo "moving files to build folder"
	@move "./libchacha20.a" "build/lib"
	@copy "./ChaCha20-Poly1305.hpp" "build/include"
endif

cleanup:
ifeq ($(OS), Linux)
	@echo "removing objects..."
	@rm *.o
	@rm -rf build
else
	rmdir /S build
	del *.o *.out *.exe
endif

build_test:
ifeq ($(OS), Linux)
	@echo "==============================="
	@echo ""
	@echo "running build test"
	@cp static-build.cpp  build
	@$(CC) build/static-build.cpp -o build/static-build.out -I./build/include/ -L./build/lib -lchacha20
	@./build/static-build.out
else
	@echo "==============================="
	@echo ""
	@echo "running build test"
	@copy static-build.cpp  build
	@$(CC) build/static-build.cpp -o build/static-build.exe -I./build/include/ -L./build/lib -lchacha20
	@build/static-build.exe
endif

# -------------------------- run test programs ---------------------------

static_test: $(OBJ)
	@echo "----------------------------------------------------"
	@echo "Running Initial Tests..."
	@./$(SRC)/QuarterRound_test.out
	@./$(SRC)/BlockFunction_test.out
	@./$(SRC)/Encryption_test.out
	@./$(SRC)/constructor.out
	@./$(SRC)/comparison.out
	@./$(SRC)/leftshifts.out
	@./$(SRC)/rightshifts.out
	@./$(SRC)/addition.out
	@./$(SRC)/subtraction.out
	@./$(SRC)/multiplication.out
	@./$(SRC)/division.out
	@./$(SRC)/poly1305_mac_test.out
	@./$(SRC)/poly1305_keygen.out
	@./$(SRC)/chacha20_aead_enc_dec.out
	@echo "----------------------------------------------------"
	@echo "Running Additional Tests..."
	@./$(SRC)/BlockFunction_test1.out
	@./$(SRC)/BlockFunction_test2.out
	@./$(SRC)/BlockFunction_test3.out
	@./$(SRC)/BlockFunction_test4.out
	@./$(SRC)/BlockFunction_test5.out
	@./$(SRC)/ChaCha20Encryption_t1.out
	@./$(SRC)/ChaCha20Encryption_t2.out
	@./$(SRC)/ChaCha20Encryption_t3.out
	@./$(SRC)/Poly1305_mac_t1.out
	@./$(SRC)/Poly1305_mac_t2.out
	@./$(SRC)/Poly1305_mac_t3.out
	@./$(SRC)/Poly1305_mac_t4.out
	@./$(SRC)/Poly1305_mac_t5.out
	@./$(SRC)/Poly1305_mac_t6.out
	@./$(SRC)/Poly1305_mac_t7.out
	@./$(SRC)/Poly1305_mac_t8.out
	@./$(SRC)/Poly1305_mac_t9.out
	@./$(SRC)/Poly1305_mac_t10.out
	@./$(SRC)/Poly1305_mac_t11.out
	@./$(SRC)/Poly1305_keygen_t1.out
	@./$(SRC)/Poly1305_keygen_t2.out
	@./$(SRC)/Poly1305_keygen_t3.out
	@./$(SRC)/ChaCha20Poly1305_decrypt.out

# -------------------------- test program compilation ---------------------------

$(SRC)/%.out: $(SRC)/%.cpp
	@echo "compiling test program (static build) - compiler : $(CC)"
	@$(CC) $(CXXFLAGS) -o $@ $< $(CPPFLAGS)

install:
ifeq ($(OS), Linux)
	@cp $(dir $(abspath $(lastword $(MAKEFILE_LIST))))build/lib/libchacha20.a $(INSTALL_PREFIX)lib
	@cp $(dir $(abspath $(lastword $(MAKEFILE_LIST))))build/include/ChaCha20-Poly1305.hpp $(INSTALL_PREFIX)include
	@echo "libchacha20.a now installed to $(INSTALL_PREFIX)lib"
	@echo "ChaCha20-Poly1305.hpp now installed to $(INSTALL_PREFIX)include"
else
	@echo .
	@echo For Mingw64 in windows, please specify your mingw64 folder path with the INSTALL_PREFIX
	@echo eample:
	@echo .
	@echo mingw32-make -f staticlib install INSTALL_PREFIX=PATH\mingw64
	@echo .
	copy build\lib\libchacha20.a "$(INSTALL_PREFIX)\lib"
	copy build\include\ChaCha20-Poly1305.hpp "$(INSTALL_PREFIX)\include
	@echo install success
endif

uninstall:
ifeq ($(OS), Linux)
	@rm $(INSTALL_PREFIX)lib/libchacha20.a
	@rm $(INSTALL_PREFIX)include/ChaCha20-Poly1305.hpp
else
	del "$(INSTALL_PREFIX)\lib\libchacha20.a"
	del "$(INSTALL_PREFIX)\include\ChaCha20-Poly1305.hpp"
	echo uninstall success
endif